#macro(showElementRifCS $tag $field $attr $label $anzsrc)
    #set($valueMap = $util.getList($item, $field))
    #foreach($key in $valueMap.keySet())
        #set($value = $valueMap.get($key))
        #if ($label != "")
            #set($labelVal = $value.get($label))
            #if ($anzsrc == "anzsrc")
                #set($lastIndex = $labelVal.lastIndexOf('/') + 1 )
                #set($labelVal = $labelVal.substring($lastIndex) )
            #end
    <$tag$attr>$util.encodeXml($labelVal)</$tag>
        #else
    <$tag$attr>$util.encodeXml($value.get($key))</$tag>
        #end
    #end
#end

#macro(showRelatedInfo $field $relatedInfoType $identifierType)
    #set($valueMap = $util.getList($item, $field))
    #foreach($key in $valueMap.keySet())
        #set ($row = $valueMap.get($key))
        #set ($value = $row.get("dc:identifier"))
        #if ("$!value" != "")
        <rif:relatedInfo type="$relatedInfoType">
            <rif:identifier type="$identifierType">$util.encodeXml($value)</rif:identifier>
            #set ($title = $row.get("dc:title"))
            #if ("$!title" != "")
            <rif:title>$util.encodeXml($title)</rif:title>
            #end
## Uncomment to map Notes as well
##            #set ($notes = $row.get("skos:note"))
##            #if ("$!notes" != "")
##            <rif:notes>$util.encodeXml($notes)</rif:notes>
##            #end
        </rif:relatedInfo>
        #end
    #end
#end

#macro(geoSpatial $field)
    #set($valueMap = $util.getList($item, $field))
    #foreach($key in $valueMap.keySet())
        <rif:coverage>
        #set($geoMap = $valueMap.get($key))
        #set($type = $geoMap.get("dc:type"))
        #set($name = $geoMap.get("gn:name"))
            <rif:spatial type="$type" $lang>$util.encodeXml($name)</rif:spatial>
        #if($type == "text")
            #set($east = $geoMap.get("geo:long"))
            #set($north = $geoMap.get("geo:lat"))
            #if ("$!east" != "" &&"$!north" != "")
            <rif:spatial type="dcmiPoint" $lang>name=$util.encodeXml($name); east=$east; north=$north</rif:spatial>
            #end
        #end
        </rif:coverage>
    #end
#end

#set($quote='"')
#set($dateFormat = "yyyy-MM-dd'T'HH:mm:ss")

#set($defaultOnError = "&Invalid XML placeholder... prevents ANDS Harvesting records in error&")
#set($group = $systemConfig.getString($defaultOnError, "redbox.identity", "RIF-CS Group"))

### Resolve the identifier
#set ($formId = $util.get($item, 'dc:identifier.rdf:PlainLiteral'))
#set ($formOrigin = $util.get($item, 'dc:identifier.redbox:origin'))
#set ($formType = $util.get($item, 'dc:identifier.dc:type.rdf:PlainLiteral'))

#set($pidType = $systemConfig.getString($defaultOnError, "curation", "pidType"))
#set($pidProperty = $systemConfig.getString($defaultOnError, "curation", "pidProperty"))
#set ($pid = $util.getMetadata($object, $pidProperty))
#if ("$!pid" == "")
    #set ($pid = $util.get($item, "metadata", "rdf:resource"))
    #if ("$!pid" == "")
        #set ($pid = $util.get($item, "metadata", "dc.identifier"))
    #end
#end

#set ($identifier = "")
#set ($identifierType = "")
#if ($formOrigin == "internal")
    #if ($pid != "")
        #set ($identifier = $pid)
        #set ($identifierType = $pidType)
    #else
        #set ($identifier = "$urlBase/detail/$oid")
        #set ($identifierType = "uri")
    #end
#else
    #set ($identifier = $formId)
    #set ($identifierType = $formType)
#end

### Relationships
#set($relationships = $item.getJsonSimpleList("relationships"))

####set($lang = "xml:lang=${quote}$util.get($item, 'dc:language.dc:identifier')${quote}")
#set($lang = "xml:lang=${quote}en${quote}")
<rif:registryObjects xmlns:rif="http://ands.org.au/standards/rif-cs/registryObjects"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://ands.org.au/standards/rif-cs/registryObjects http://services.ands.org.au/home/orca/schemata/1.3.0/registryObjects.xsd">
    <rif:registryObject group="$util.encodeXml($group)">

        <rif:key>$util.encodeXml($identifier)</rif:key>
        <rif:originatingSource>$urlBase</rif:originatingSource>

        #set($dateModified = "")
        #if ($util.get($item, 'dc:modified') != "")
            #set($rawModified = "$util.getDateTime($util.get($item, 'dc:modified'), $dateFormat)Z")
            #set($dateModified = "dateModified=${quote}${rawModified}${quote}")
        #end

        #set($dateAccessioned = "")
        #if ($util.get($item, "dc:created") != "")
            #set($rawAccessioned = "$util.getDateTime($util.get($item, 'dc:created'), $dateFormat)Z")
            #set($dateAccessioned = "dateAccessioned=${quote}${rawAccessioned}${quote}")
        #end

        #################
        ## The order of child codes under <collection> is important, don't
        ## change the order or the XML will not validate:
        ##  1)  <rif:identifier>
        ##  2)  <rif:name>
        ##  3)  <rif:location>
        ##  4)  <rif:coverage>
        ##  5)  <rif:relatedObject>
        ##  6)  <rif:subject>
        ##  7)  <rif:description>
        ##  8)  <rif:rights>
        ##  9)  <rif:relatedInfo>
        ##  10) <rif:citationInfo>
        ##
        ##  http://services.ands.org.au/documentation/rifcs/1.3/schemadocs/registryObjects.html
        #################
        <rif:collection type="$util.get($item, "dc:type.rdf:PlainLiteral")" $dateModified $dateAccessioned>
            <rif:identifier type="$identifierType">$identifier</rif:identifier>

            <rif:name type="primary" $lang>
                <rif:namePart>$util.encodeXml($util.get($item, "dc:title"))</rif:namePart>
            </rif:name>

        ## Location, use Handle as priority if requested
            <rif:location>
        #set($valueMap = $util.getList($item, "bibo:Website"))
        #foreach($key in $valueMap.keySet())
            #set ($value = $valueMap.get($key).get("dc:identifier"))
            #if ("$!value" != "")
                <rif:address>
                    <rif:electronic type="url">
                        <rif:value>$util.encodeXml($value)</rif:value>
                    </rif:electronic>
                </rif:address>
            #end
        #end

        #### Physical location
        #set ($value = $util.get($item, "vivo:Location.vivo:GeographicLocation.gn:name"))
        #if ("$!value" != "")
                <rif:address>
                    <rif:physical>
                        <rif:addressPart type="text">$util.encodeXml($value)</rif:addressPart>
                    </rif:physical>
                </rif:address>
        #end
            </rif:location>

        #set ($covFrom = $util.get($item, "dc:coverage.vivo:DateTimeInterval.vivo:start"))
        #set ($covTo = $util.get($item, "dc:coverage.vivo:DateTimeInterval.vivo:end"))
        #set ($covPeriod = $util.get($item, "dc:coverage.redbox:timePeriod"))
        #if ("$!covFrom" != "" || "$!covTo" != "" || "$!covPeriod" != "")
            <rif:coverage>
                <rif:temporal>
                    #if ("$!covFrom" != "")
                    <rif:date type="dateFrom" dateFormat="W3CDTF">$util.getDateTime($covFrom, $dateFormat)Z</rif:date>
                    #end
                    #if ("$!covTo" != "")
                    <rif:date type="dateTo" dateFormat="W3CDTF">$util.getDateTime($covTo, $dateFormat)Z</rif:date>
                    #end
                    #if ("$!covPeriod" != "")
                    <rif:text>$util.encodeXml($covPeriod)</rif:text>
                    #end
                </rif:temporal>
            </rif:coverage>
        #end

            #geoSpatial("dc:coverage.vivo:GeographicLocation")

            ### Relations
            #set($valueList = $item.getJsonSimpleList("relationships"))
            #if($valueList)
                #foreach($value in $valueList)
                    #if ($value.getBoolean(false, "isCurated"))
                        #set($key = $value.getString("empty", "curatedPid"))
                        #set($rel = $value.getString("hasAssociationWith", "relationship"))
                        #set($desc = $value.getString("empty", "description"))
                        #if ($key != "empty")
            <rif:relatedObject>
                <rif:key>$util.encodeXml($key)</rif:key>
                            #if ($desc != "empty")
                <rif:relation type="$util.encodeXml($rel)">
                    <rif:description>$util.encodeXml($desc)</rif:description>
                </rif:relation>
                            #else
                <rif:relation type="$util.encodeXml($rel)"/>
                            #end
            </rif:relatedObject>
                        #end
                    #end
                #end
            #end

            #showElementRifCS("rif:subject" "dc:subject.vivo:keyword", " type=${quote}local${quote} $lang", "rdf:PlainLiteral", "")
            #showElementRifCS("rif:subject" "dc:subject.anzsrc:for", " type=${quote}anzsrc-for${quote} $lang", "rdf:resource", "anzsrc")
            #showElementRifCS("rif:subject" "dc:subject.anzsrc:seo", " type=${quote}anzsrc-seo${quote} $lang", "rdf:resource", "anzsrc")

        #set ($value = $util.get($item, "dc:subject.anzsrc:toa.skos:prefLabel"))
        #if ("$!value" != "")
            <rif:subject type="anzsrc-toa">$util.encodeXml($value)</rif:subject>
        #end

        #set ($value = $util.get($item, "dc:description"))
        #if ("$!value" != "")
            <rif:description type="full" $lang>$util.encodeXml($value)</rif:description>
        #end

        #################
        ## Rights
        #set ($accessRights = $util.get($item, "dc:accessRights.skos:prefLabel"))
        #set ($accessRightsUri = $util.get($item, "dc:accessRights.dc:identifier"))
        #set ($accessRightsUriStr = "")
        #if ("$!accessRightsUri" != "")
            #set ($accessRightsUriStr = " rightsUri=${quote}${accessRightsUri}${quote}")
        #end
        #set ($rights = $util.get($item, "dc:accessRights.dc:RightsStatement.skos:prefLabel"))
        #set ($rightsUri = $util.get($item, "dc:accessRights.dc:RightsStatement.dc:identifier"))
        #set ($rightsUriStr = "")
        #if ("$!rightsUri" != "")
            #set ($rightsUriStr = " rightsUri=${quote}${rightsUri}${quote}")
        #end
        #set ($licence = $util.get($item, "dc:license.skos:prefLabel"))
        #set ($licenceUri = $util.get($item, "dc:license.dc:identifier"))
        #set ($licenceUriStr = "")
        #if ("$!licenceUri" != "")
            #set ($licenceUriStr = " rightsUri=${quote}${licenceUri}${quote}")
        #end

        #if ("$!accessRights" != "" || "$!rights" != "" || "$!licence" != "")
            <rif:rights>
            #if ("$!rights" != "")
                <rif:rightsStatement${rightsUriStr}>$util.encodeXml($rights)</rif:rightsStatement>
            #end
            #if ("$!accessRights" != "")
                <rif:accessRights${accessRightsUriStr}>$util.encodeXml($accessRights)</rif:accessRights>
            #end
            #if ("$!licence" != "")
                <rif:licence${licenceUriStr}>$util.encodeXml($licence)</rif:licence>
            #end
            </rif:rights>
        #end
        #################

        #showRelatedInfo("dc:relation.swrc:Publication", "publication", "uri")
        #showRelatedInfo("dc:relation.bibo:Website", "website", "uri")

        #set($showCitation = $util.get($item, "dc:biblioGraphicCitation.redbox:sendCitation"))
        #if ("$!showCitation" != "" && $showCitation == "on")
            #set($doiProperty = $systemConfig.getString($defaultOnError, "andsDoi", "doiProperty"))
            #set ($doi = $util.getMetadata($object, $doiProperty))
            ## Use the DOI by preference for a citation
            #if ("$!doi" == "")
                #set ($citeId = $pid)
                #set ($citeIdType = $identifierType)
            #else
                #set ($citeId = "http://dx.doi.org/${doi}")
                #set ($citeIdType = "doi")
            #end
            <rif:citationInfo>
                #set($citationPublisher = $util.get($item, "dc:biblioGraphicCitation.dc:hasPart.dc:publisher.rdf:PlainLiteral"))
                #set($citationTitle = $util.get($item, "dc:biblioGraphicCitation.dc:hasPart.dc:title"))
                #set($creatorMap = $util.getList($item, "dc:biblioGraphicCitation.dc:hasPart.locrel:ctb"))
                #set($creatorString = "")
                #foreach($key in $creatorMap.keySet())
                    #if ($velocityCount != 1)
                        #set($creatorString = "${creatorString}; ")
                    #end
                    #set ($row = $creatorMap.get($key))
                    #set ($given = $row.get("foaf:givenName"))
                    #set ($family = $row.get("foaf:familyName"))
                    #set($creatorString = "${creatorString}${family}, ${given}")
                #end
                #set($dateMap = $util.getList($item, "dc:biblioGraphicCitation.dc:hasPart.dc:date"))
                #foreach($key in $dateMap.keySet())
                    #set ($row = $dateMap.get($key))
                    #set ($date = $row.get("rdf:PlainLiteral"))
                    #set ($dateType = $row.get("dc:type.rdf:PlainLiteral"))
                    #if ($dateType == "publicationDate")
                #set($citationDate = $date.substring(0, 4))
                    #end
                #end
                #set($citationString = "$creatorString ($citationDate): $citationTitle. $citationPublisher. $citeId")
                <rif:fullCitation style="Datacite">$util.encodeXml($citationString)</rif:fullCitation>

                <rif:citationMetadata>
                    <rif:identifier type="$util.encodeXml($citeIdType)">$util.encodeXml($citeId)</rif:identifier>

                    #set($creatorMap = $util.getList($item, "dc:biblioGraphicCitation.dc:hasPart.locrel:ctb"))
                    #foreach($key in $creatorMap.keySet())
                        #set ($row = $creatorMap.get($key))
                        #set ($title = $row.get("foaf:title"))
                        #set ($given = $row.get("foaf:givenName"))
                        #set ($family = $row.get("foaf:familyName"))
                    <rif:contributor seq="$velocityCount">
                        #if ("$!title" != "")
                            <rif:namePart type="title">$util.encodeXml($title)</rif:namePart>
                        #end
                        #if ("$!given" != "")
                            <rif:namePart type="given">$util.encodeXml($given)</rif:namePart>
                        #end
                        #if ("$!family" != "")
                            <rif:namePart type="family">$util.encodeXml($family)</rif:namePart>
                        #end
                    </rif:contributor>
                    #end

                    <rif:title>$util.encodeXml($citationTitle)</rif:title>

                    #set($citationEdition = $util.get($item, "dc:biblioGraphicCitation.dc:hasPart.dc:hasVersion.rdf:PlainLiteral"))
                    <rif:edition>$util.encodeXml($citationEdition)</rif:edition>

                    #if ("$!citationPublisher" != "")
                    <rif:publisher>$util.encodeXml($citationPublisher)</rif:publisher>
                    #end

                    #set($citationPublishedLocation = $util.get($item, "dc:biblioGraphicCitation.dc:hasPart.vivo:Publisher.vivo:Location"))
                    <rif:placePublished>$util.encodeXml($citationPublishedLocation)</rif:placePublished>

                    #set($valueMap = $util.getList($item, "dc:biblioGraphicCitation.dc:hasPart.dc:date"))
                    #foreach($key in $valueMap.keySet())
                        #set ($row = $valueMap.get($key))
                        #set ($date = $row.get("rdf:PlainLiteral"))
                        #set ($dateType = $row.get("dc:type.rdf:PlainLiteral"))
                        #if ("$!date" != "")
                            #set($date = "$util.getDateTime($date, $dateFormat)Z")
                    <rif:date type="$util.encodeXml($dateType)">$util.encodeXml($date)</rif:date>
                        #end
                    #end

                    #set($citationUrl = $util.get($item, "dc:biblioGraphicCitation.dc:hasPart.bibo:Website.dc:identifier"))
                    <rif:url>$util.encodeXml($citationUrl)</rif:url>

                    #set($citationContext = $util.get($item, "dc:biblioGraphicCitation.dc:hasPart.skos:scopeNote"))
                    <rif:context>$util.encodeXml($citationContext)</rif:context>
                </rif:citationMetadata>
            </rif:citationInfo>
        #end
        </rif:collection>
    </rif:registryObject>
</rif:registryObjects>